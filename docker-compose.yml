version: '3'
volumes:
  web_bundler:
  analytics_bundler:
  postgres: 
networks:
  default:
    external: true
    name: kafka_network
services:
  web: &web
    tty: true
    stdin_open: true
    image: karafka-example-dev
    build:
      context: ./back_office
      dockerfile: Dockerfile
    command: bundle exec rails server -b 0.0.0.0 -p 3000
    ports:
      - '3000:3000'
    volumes:
      - ./back_office:/app/karafka_example:delegated
      - web_bundler:/bundle
    environment:
      - BUNDLE_CACHE_ALL=true
      - BUNDLE_PATH=/bundle
      - BUNDLE_JOBS=4
    depends_on:
      - postgres
      - kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    expose:
    - "2181"
  kafka:
    image: confluentinc/cp-kafka:4.1.0
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  web_css:
    <<: *web
    command: bin/rails tailwindcss:watch
    ports: []
    depends_on:
      - web
  postgres:
    image: postgis/postgis:14-master
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
  analytics: &analytics
    <<: *web
    image: karafka-example-analytics-dev
    build:
      context: ./analytics
      dockerfile: Dockerfile
    command: bundle exec rails server -b 0.0.0.0 -p 3000
    ports:
      - '4000:3000'
    volumes:
      - ./analytics:/app/karafka_example:delegated
      - analytics_bundler:/bundle
  karafka_analytics:
    <<: *analytics
    ports: []
    command: bundle exec karafka server
  karafka_analytics_2:
    <<: *analytics
    ports: []
    command: bundle exec karafka server
  analytics_css:
    <<: *analytics
    command: bin/rails tailwindcss:watch
    ports: []
    depends_on:
      - analytics
